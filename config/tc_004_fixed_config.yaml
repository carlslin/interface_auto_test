# TC_004修复后的智能测试配置
# 针对updatePet基本功能测试失败的优化配置

test_config:
  name: "Pet Store API智能测试配置"
  version: "1.1.0"  # 修复版本
  environment: "dev"
  
  # 响应时间配置 - 针对TC_004失败的关键修复
  timeouts:
    # 根据HTTP方法设置不同的超时时间
    GET: 3.0     # GET请求通常较快
    POST: 5.0    # POST请求需要创建数据
    PUT: 8.0     # PUT请求处理更新逻辑，需要更多时间（关键修复）
    DELETE: 4.0  # DELETE请求需要清理数据
    
    # 默认超时（兜底）
    default: 5.0
    
    # 响应时间容忍度
    tolerance: 0.5  # 允许0.5秒的容忍度
    
  # 重试配置 - 提高测试稳定性
  retry:
    enabled: true
    max_retries: 2        # 最多重试2次
    retry_delay: 1.0      # 重试间隔1秒
    retry_on_timeout: true  # 超时时自动重试
    retry_on_connection_error: true
    
  # 断言配置 - 更灵活的验证
  assertions:
    strict_mode: false     # 非严格模式，允许一定的容错
    response_time_check: true
    status_code_check: true
    data_structure_check: true
    
    # 性能阈值配置
    performance_thresholds:
      excellent: 1.0    # 1秒内为优秀
      good: 3.0         # 3秒内为良好
      acceptable: 8.0   # 8秒内为可接受（PUT操作的新阈值）
      
# AI智能测试配置
ai_config:
  enabled: true
  
  # 智能超时策略
  adaptive_timeouts:
    enabled: true
    # 根据历史数据自动调整超时时间
    learning_mode: true
    # 基准倍数（基于历史平均响应时间）
    timeout_multiplier: 2.5
    
  # 智能重试策略  
  intelligent_retry:
    enabled: true
    # 根据失败类型决定是否重试
    retry_on_timeout: true
    retry_on_server_error: true
    retry_on_network_error: true
    skip_retry_on_client_error: true  # 4xx错误不重试
    
  # 测试数据生成配置
  test_data:
    realistic_count: 10
    boundary_count: 5
    invalid_count: 3
    performance_count: 20
    
# Mock服务器配置优化
mock_config:
  # 针对PUT操作的优化
  response_delays:
    GET: 0.1      # GET请求快速响应
    POST: 0.3     # POST请求中等延迟
    PUT: 0.8      # PUT请求允许更长处理时间（但控制在合理范围）
    DELETE: 0.2   # DELETE请求较快
    
  # 并发处理配置
  concurrency:
    max_connections: 100
    timeout: 30
    keep_alive: true
    
# 测试执行配置
execution_config:
  parallel: 2
  fail_fast: false  # 不要在第一个失败时停止，收集更多信息
  generate_reports: true
  report_formats: ['html', 'json']
  
  # 测试分类执行
  test_phases:
    smoke: 
      timeout_multiplier: 0.5  # 冒烟测试要求更快
    functional:
      timeout_multiplier: 1.0  # 功能测试使用标准超时
    performance:
      timeout_multiplier: 2.0  # 性能测试允许更长时间
      
# 监控和告警配置
monitoring_config:
  performance_tracking:
    enabled: true
    track_response_times: true
    track_failure_rates: true
    
  # 告警阈值
  alerts:
    response_time_degradation: 50%  # 响应时间恶化50%时告警
    failure_rate_threshold: 10%     # 失败率超过10%时告警
    
# 报告配置
reporting_config:
  include_performance_analysis: true
  include_failure_analysis: true  # 包含失败分析（如TC_004的情况）
  include_ai_insights: true
  include_recommendations: true
  
  # 报告详细程度
  detail_level: "comprehensive"  # 详细报告模式
  
# 特定测试用例配置
test_case_specific:
  # TC_004特殊配置
  "TC_004":
    description: "updatePet基本功能测试"
    timeout: 8.0          # 特别为updatePet设置的超时时间
    retry_enabled: true
    max_retries: 3        # 允许更多重试次数
    priority: "high"
    performance_threshold: 8.0
    
  # 其他关键测试的配置
  "TC_002":
    description: "createPet基本功能测试" 
    timeout: 5.0
    
  "TC_005":
    description: "deletePet基本功能测试"
    timeout: 4.0

# 日志配置
logging:
  level: "INFO"
  include_performance_logs: true
  include_failure_details: true
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"